{
  "version": "0.0.1",
  "name": "Better Rust",
  "scopeName": "source.rust",
  "patterns": [
    {
      "include": "#directives"
    },
    {
      "include": "#statements"
    },
    {
      "name": "comment.line.shebang.rust",
      "match": "\\A(#!).*(?=$)",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.rust"
        }
      }
    }
  ],
  "repository": {
    "directives": {},

    "statements": {
      "patterns": [
        {
          "include": "#expressions"
        },
        {
          "include": "#string"
        }
      ]
    },

    "expressions": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.rust",
          "match": "(<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.assignment.rust",
          "match": "(\\+=|-=|/=|\\*=|%=|\\^=|&=|\\|=|<<=|>>=|=)"
        },
        {
          "name": "keyword.operator.arithmetic.rust",
          "match": "(!|\\+|-|/|\\*|%|\\^|&|\\||<<|>>)"
        }
      ]
    },

    "string": {
      "patterns": [
        {
          "include": "#qstring-double"
        },
        {
          "include": "#qstring-single"
        },
        {
          "include": "#template"
        }
      ]
    },

    "qstring-double": {
      "name": "string.quoted.double.rust",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.rust"
        }
      },
      "end": "(\")|((?:[^\\\\\\n])$)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.rust"
        },
        "2": {
          "name": "invalid.illegal.newline.rust"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },

    "qstring-single": {
      "name": "string.quoted.single.rust",
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.rust"
        }
      },
      "end": "(\\')|((?:[^\\\\\\n])$)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.rust"
        },
        "2": {
          "name": "invalid.illegal.newline.rust"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },

    "string-character-escape": {
      "name": "constant.character.escape.rust",
      "match": "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
    }
  }
}
